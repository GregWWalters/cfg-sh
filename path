# PATH additions
# TODO: find a way to load these _after_ the system sets the path so that
# priority can be given to user binaries, but in a way other than having to
# source it from each particular shell's config file.

if [ -z "$PATH_LOADED" ]; then
  export PATH_LOADED=1;

  # Executables
  if [ -n "$HOMEBREW_PREFIX" ]; then
    PATH="$HOMEBREW_PREFIX/opt/coreutils/libexec/gnubin:$PATH"        # gnu coreutils
    PATH="$HOMEBREW_PREFIX/opt/gnu-sed/libexec/gnubin:$PATH"          # gnu sed
    PATH="$HOMEBREW_PREFIX/opt/grep/libexec/gnubin:$PATH"             # gnu grep
    MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"        # gnu man pages
  fi
  PATH="$HOME/.cargo/bin:$PATH"                               # Rust bins

  # If a directory in $HOME/bin contains an executable, check whether it's
  # already in $PATH and, if not, append it.
  for d in $(find $HOME/bin \
    -maxdepth 2 -type f -perm -111 \
    -exec dirname {} ';'); do
    if [ "${PATH#*$d}" = "$PATH" ]; then
      PATH="$PATH:$d"
    fi
  done

  PATH="$PATH:$XDG_CONFIG_HOME/git/funcs"                        # git functions

  # Man pages
  MANPATH="$MANPATH:$HOME/man"                                # user man pages

  export PATH MANPATH
fi

# vim:ft=sh
